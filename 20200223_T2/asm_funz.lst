


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             asm_functions, CODE, READONLY
    2 00000000         
    3 00000000         ;definizione di costanti e register renaming
    4 00000000         ;MY_CONST EQU 36
    5 00000000         ;my_register RN 0
    6 00000000         ; Per leggere 8 bit  ldrb r1, [array, r4]  // Load byte 
                       from array + offset (r4) da incrementare di 1
    7 00000000         ; Per scrivere su 8 bit strb valore_da_scrivere, [array,
                        offset]   
    8 00000000         ; Per leggere 16 bit  ldrh r1, [array, r0, lsl #1]   // 
                       Load byte from array + offset (r4) da incrementare di 1
    9 00000000         ; Per scrivere su 16 bit strb valore_da_scrivere, [array
                       , contatore, #lsl #1] 
   10 00000000         ; Per leggere 32 bit  ldr r1, [array, r0, lsl #2]   // L
                       oad byte from array + offset (r4) da incrementare di 1
   11 00000000         ; Per scrivere su 32 bit STR valore_da_scrivere, [array,
                        contatore, lsl #2]
   12 00000000         get_and_sort
                               PROC
   13 00000000                 EXPORT           get_and_sort
   14 00000000         
   15 00000000 E92D 5FF0       PUSH             {r4-r12,lr}
   16 00000004         ;r0 = vett
   17 00000004         ;r1= val
   18 00000004         ;r2= n
   19 00000004 4613            mov              r3,r2       ;contatore
   20 00000006 2A00            cmp              r2,#0
   21 00000008 DD12            BLE              skip
   22 0000000A 4614            mov              r4,r2
   23 0000000C F1A4 0401       sub              r4,r4,#1    ; puntatore element
                                                            o i-1
   24 00000010         loop
   25 00000010 5CC6            ldrb             r6, [r0, r3] ;elemento i esimo
   26 00000012 5D07            ldrb             r7, [r0, r4] ; elementi i-1 esi
                                                            mo
   27 00000014 42BE            CMP              r6,r7
   28 00000016 DD05            BLE              skip_swap
   29 00000018 46B0            MOV              r8,r6
   30 0000001A 46B9            MOV              r9,r7
   31 0000001C F800 8004       strb             r8,[r0,r4]
   32 00000020 F800 9003       strb             r9,[r0,r3]
   33 00000024         skip_swap
   34 00000024 F1A3 0301       sub              R3, R3, #1
   35 00000028 F1A4 0401       sub              r4,r4,#1
   36 0000002C 2B00            CMP              R3,#0
   37 0000002E D1EF            BNE              loop
   38 00000030         skip
   39 00000030 4608            mov              r0,r1
   40 00000032 E8BD 9FF0       POP              {r4-r12,pc} ;restore di tutti i
                                                             registri utilizzat
                                                            i nel mio codice
   41 00000036                 ENDP
   42 00000036                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\asm_funz.d -o.\asm_funz.o -I.\RTE\_Target_1 -IC:\Users\david\App
Data\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\david\AppDat
a\Local\Arm\Packs\Keil\LPC1700_DFP\2.7.1\Device\Include --predefine="__EVAL SET
A 1" --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --pred
efine="LPC175x_6x SETA 1" --predefine="_RTE_ SETA 1" --list=.\asm_funz.lst asm_



ARM Macro Assembler    Page 2 


funz.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

asm_functions 00000000

Symbol: asm_functions
   Definitions
      At line 1 in file asm_funz.s
   Uses
      None
Comment: asm_functions unused
get_and_sort 00000000

Symbol: get_and_sort
   Definitions
      At line 12 in file asm_funz.s
   Uses
      At line 13 in file asm_funz.s
Comment: get_and_sort used once
loop 00000010

Symbol: loop
   Definitions
      At line 24 in file asm_funz.s
   Uses
      At line 37 in file asm_funz.s
Comment: loop used once
skip 00000030

Symbol: skip
   Definitions
      At line 38 in file asm_funz.s
   Uses
      At line 21 in file asm_funz.s
Comment: skip used once
skip_swap 00000024

Symbol: skip_swap
   Definitions
      At line 33 in file asm_funz.s
   Uses
      At line 28 in file asm_funz.s
Comment: skip_swap used once
5 symbols
339 symbols in table
